package BusinessLogic;

import BusinessData.DAL_StockLedger;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import net.sf.json.JSONObject;

/**
 *
 * @author N0535
 */
public class BLL_StockLedger {
    
    public String Insert_StockLedger(JSONObject sJsonIn, String sMethod, int iLineNo, String idx, String SiteName) throws IOException, SQLException, ParseException {
        String s_return = "";
        BLL_Common.Common_Object obj = null;
        DAL_StockLedger objStkLed = new DAL_StockLedger();
               
        String [] aryExSL = {
            "" /*0 sMethod VARCHAR(30)*/,
            "0", /*1 INTEGER,*/
            "0", /*2 INTEGER,*/
            sJsonIn.get("compcode").toString(), /*3 sSLDGCompany  VARCHAR(10),*/
            sJsonIn.get("location").toString(), /*4 sSLDGLocation  VARCHAR(10),*/
            sJsonIn.get("finyear").toString(), /*5 sSLDGFinYear  INTEGER,*/
            sJsonIn.get("finperiod").toString(), /*6 sSLDGFinPeriod  INTEGER,*/
            sJsonIn.get("reasoncode").toString(), /*7 sSLDGReasonCode  VARCHAR(6),*/
            sJsonIn.get("trxtype").toString(), /*8 sSLDGTrxType VARCHAR(6),*/
            sJsonIn.get("supplier").toString(), /*9 sSLDGSupplierCode VARCHAR(10),*/
            "", /*10 sSLDGInterCompanySupplier VARCHAR(4),*/
            sJsonIn.get("docno").toString(), /*11 sSLDGDocNo VARCHAR(10),*/
            "", /*12 sSLDGDocDate DATETIME,*/
            sJsonIn.get("refno").toString(), /*13 sSLDGRefNo VARCHAR(30),*/
            sJsonIn.get("refdate").toString(), /* 14 sSLDGRefDate JsonLedger.get("sldg_refdate").toString().toUpperCase(), DATETIME,*/                         
            sJsonIn.get("invno").toString(), /*15 sSLDGInvNo VARCHAR(30),*/
            sJsonIn.get("invdate").toString(), /* 16 sSLDGInvDate JsonLedger.get("sldg_invdate").toString().toUpperCase(), /*DATETIME,*/
            sJsonIn.get("dono").toString(), /*17 sSLDGDoNo VARCHAR(30),*/
            sJsonIn.get("dodate").toString(), /* 18 sSLDGDoDate JsonLedger.get("sldg_dodate").toString().toUpperCase(), /*DATETIME,*/
            sJsonIn.get("remark").toString(), /*19 sSLDGRemark VARCHAR(100),*/
            "", //sJsonIn.get("gstinclusive").toString(), /*20 sSLDGIsGSTInclusive VARCHAR(1),*/
            String.valueOf(sJsonIn.get("lineno")), //sJsonIn.get("lineno").toString(), String.valueOf(iLineNo), /*21 sSLDLLineNo INTEGER,*/
            "0", /*22 sSLDLStockIdx INTEGER,*/
            sJsonIn.get("stkcode").toString(), /*23 sSLDLStockCode VARCHAR(10),*/                        
            sJsonIn.get("uomcode").toString(), /*24 sSLDLUOMCode VARCHAR(6),*/
            "0", /*25 sSLDLUOMIdx INTEGER,*/
            sJsonIn.get("unitcost").toString(), /*26 sSLDLUnitCost VARCHAR(20),*/
            sJsonIn.get("qty").toString(), /*27 sSLDLQty VARCHAR(20),*/
            sJsonIn.get("discamt").toString(), /*28 sSLDLDiscAmt VARCHAR(20),*/
            sJsonIn.get("subtotalamt").toString(), /*29 sSLDLSubTotalAmt VARCHAR(20),*/
            sJsonIn.get("discprcent").toString(), /*30 sSLDLDiscPercent VARCHAR(20),*/
            sJsonIn.get("discoption").toString(), /*31 sSLDLDiscOption VARCHAR(1),*/
            sJsonIn.get("expiredate").toString(), /*32  sSLDLExpiryDate JsonLedger.get("sldl_expirydate").toString().toUpperCase(), /*DATETIME,*/
            sJsonIn.get("batchno").toString(), /*33 sSLDLBatchNo VARCHAR(10),*/
            sJsonIn.get("pono").toString(), /*34 sSLDLPONo VARCHAR(30),*/
            sJsonIn.get("location").toString(), /*35 sSLDLLocation VARCHAR(10),*/
            sJsonIn.get("poqty").toString(), /*36 sSLDLPOQty  VARCHAR(20),*/
            sJsonIn.get("qtybonus").toString(), /*37 sSLDLBonusQty VARCHAR(20),*/
            sJsonIn.get("poqtybonus").toString(), /*38 sSLDLPOBonusQty VARCHAR(20),*/
            sJsonIn.get("polineno").toString(), /*39 sSLDLPOLineNo INTEGER,*/
            sJsonIn.get("poidx").toString(), /*40 sSLDLPOIdx INTEGER,*/
            "0", /*41 sSLDLConvUOMIdx INTEGER,*/
            sJsonIn.get("convqty").toString(), /*42 sSLDLConvQty VARCHAR(20),*/
            sJsonIn.get("convunitcost").toString(), /*43 sSLDLConvUnitCost VARCHAR(20),*/
            sJsonIn.get("convuomcode").toString(), /*44 sSLDLConvUOMCode VARCHAR(6),*/
            sJsonIn.get("unitprice").toString(), /*45 sSLDLUnitPrice VARCHAR(20),*/
            sJsonIn.get("gstpurcode").toString(), /*46 sSLDLGSTPurcode VARCHAR(8),*/
            sJsonIn.get("gsttaxrates").toString(), /*47 sSLDLGSTTaxRates VARCHAR(20),*/
            sJsonIn.get("gstamt").toString(), /*48 sSLDLGSTAmt VARCHAR(20),*/
            sJsonIn.get("grosstotal").toString(), /*49 sSLDLGrossTotal VARCHAR(20),*/
            "PORTAL", /*50 ssystemname VARCHAR(10),*/
            "SYSTEM", /*51 sBy varchar(10),*/
            "1", /*52 rec status varchar(4),*/
            "N",/*53 data ex status varchar(4),*/
            sJsonIn.get("curr_bal").toString(), /*54 sSLDLCurrBal VARCHAR(20)*/ 
            sJsonIn.get("updateddate").toString() /*55 ControlDateTime VARCHAR(20)*/ 
            };
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//        DateFormat inputFormat = new SimpleDateFormat ("dd/MM/yyyy HH:mm:ss")
        DateFormat inputFormat = new SimpleDateFormat ("dd/MM/yyyy hh:mm:ss a"); //yyyy/MM/dd HH:mm:ss

//        if(!sJsonIn.get("docdate").toString().equals("")){
//            aryExSL[12] = "'"+dateFormat.format(inputFormat.parse(sJsonIn.get("docdate").toString()))+"'";
//        }
//        if(!sJsonIn.get("refdate").toString().equals("")){
//            aryExSL[14] = "'"+dateFormat.format(inputFormat.parse(sJsonIn.get("refdate").toString()))+"'";
//        }
//        if(!sJsonIn.get("invdate").toString().equals("")){
//            aryExSL[16] = "'"+dateFormat.format(inputFormat.parse(sJsonIn.get("invdate").toString()))+"'";
//        }
//        if(!sJsonIn.get("dodate").toString().equals("")){
//            aryExSL[18] = "'"+dateFormat.format(inputFormat.parse(sJsonIn.get("dodate").toString()))+"'";
//        }
//        if(!sJsonIn.get("expiredate").toString().equals("")){
//            aryExSL[32] = "'"+dateFormat.format(inputFormat.parse(sJsonIn.get("expiredate").toString()))+"'";
//        }
//        
//        if(!sJsonIn.get("updateddate").toString().equals("")){
//            aryExSL[55] = "'"+dateFormat.format(inputFormat.parse(sJsonIn.get("updateddate").toString()))+"'";
//        }
        
        if(!sJsonIn.get("docdate").toString().equals("")){
            aryExSL[12] = dateFormat.format(inputFormat.parse(sJsonIn.get("docdate").toString()));
//            aryExSL[12] = "2017-10-30 23:34:27";
        }
        if(!sJsonIn.get("refdate").toString().equals("")){
            aryExSL[14] = dateFormat.format(inputFormat.parse(sJsonIn.get("refdate").toString()));
        }
        if(!sJsonIn.get("invdate").toString().equals("")){
            aryExSL[16] = dateFormat.format(inputFormat.parse(sJsonIn.get("invdate").toString()));
        }
        if(!sJsonIn.get("dodate").toString().equals("")){
            aryExSL[18] = dateFormat.format(inputFormat.parse(sJsonIn.get("dodate").toString()));
        }
        if(!sJsonIn.get("expiredate").toString().equals("")){
            aryExSL[32] = dateFormat.format(inputFormat.parse(sJsonIn.get("expiredate").toString()));
        }
        
        if(!sJsonIn.get("updateddate").toString().equals("")){
            aryExSL[55] = dateFormat.format(inputFormat.parse(sJsonIn.get("updateddate").toString()));
//            aryExSL[55] = "2017-10-30 23:34:27";
        }
        
        if(sMethod.equals("Header")){
            aryExSL[0] = "ADD_STOCKLEDGERHEADER";
            obj = objStkLed.DAL_UPDATE_STOCK_LEDGER(SiteName, aryExSL);
        }else{
            aryExSL[0] = "ADD_STOCKLEDGERDETAIL";
            aryExSL[1] = idx;
            obj = objStkLed.DAL_UPDATE_STOCK_LEDGER(SiteName, aryExSL);
        }
        
        try{
            if (obj.getObjectArray(0).toString().equals("00000")) {
                s_return = obj.getObjectArray(2).toString();
            } else {
                s_return = "";
                obj.rollback();
            }
        }catch(Exception ex){
            s_return = "";
        }
        
        return s_return;
    }
    
    public String Remove_StockLedger(JSONObject sJsonIn, String s_path, String SiteName) throws IOException, SQLException, ParseException{
        String s_return = "";
        DAL_StockLedger objStkLed = new DAL_StockLedger();
               
        String sCompCode = sJsonIn.get("compcode").toString();
        String sLocation =sJsonIn.get("location").toString(); 
        String sStkCode =sJsonIn.get("stkcode").toString();
        

        try
        { 
            s_return = objStkLed.DAL_REMOVE_STOCK_LEDGER(sCompCode,sLocation,sStkCode,s_path, SiteName);
            
        }catch(Exception ex){
            s_return = "";
        }
        
        return s_return;
    }
    
}
