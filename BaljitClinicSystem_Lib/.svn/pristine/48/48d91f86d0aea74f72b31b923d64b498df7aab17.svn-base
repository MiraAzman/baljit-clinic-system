CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_TRX_STOCKTRANSFER`(
IN sMethod            varchar(30),
     IN sStockXfrHdrIdx INTEGER ,
IN sStockXfrDtlIdx INTEGER,
     IN sXFRD_LineNo INTEGER ,
IN sXFRD_StockCode VARCHAR(16) ,
IN sXFRD_UOMCode VARCHAR(6) ,
IN sXFRD_UOMIdx INTEGER ,
IN sXFRD_Qty VARCHAR(20) ,
IN sXFRD_IssueLocation VARCHAR(10) ,
IN sXFRD_RecieveLocation VARCHAR(10) ,
IN sXFRD_Status VARCHAR(4) ,
IN sXFRD_Remarks VARCHAR(200) ,
IN sXFRD_UnitCost VARCHAR(20) ,
IN sXFRD_DiscAmt VARCHAR(20) ,
IN sXFRD_SubTotalAmt VARCHAR(20) ,
IN sXFRD_DiscPercent NUMERIC(5,2) ,
IN sXFRD_DiscOption VARCHAR(1) ,
IN sXFRD_ExpiryDate VARCHAR(30) ,
IN sXFRD_BatchNo VARCHAR(10) ,
IN sXFRD_PONo VARCHAR(30) ,
IN sXFRD_POQty  VARCHAR(20) ,
IN sXFRD_BonusQty VARCHAR(20) ,
IN sXFRD_POBonusQty VARCHAR(20) ,
IN sXFRD_POLineNo INTEGER ,
IN sXFRD_POIdx INTEGER ,
IN sXFRD_ConvUOMIdx INTEGER ,
IN sXFRD_ConvQty VARCHAR(20) ,
IN sXFRD_ConvUnitCost VARCHAR(20) ,
IN sXFRD_ConvUOMCode VARCHAR(6) ,
IN sXFRD_UnitPrice VARCHAR(20) ,
IN sXFRD_GSTPurcode VARCHAR(8) ,
IN sXFRD_GSTTaxRates VARCHAR(20) ,
IN sXFRD_GSTAmt VARCHAR(20) ,
IN sXFRD_GrossTotal VARCHAR(20) ,
IN sXFRD_DispatchedQty VARCHAR(20) ,
   IN sXFRH_Company      VARCHAR(10),
IN sXFRH_DocNo	VARCHAR(10),
IN sXFRH_DocDate	VARCHAR(30),
IN sXFRH_Remark	VARCHAR(100),
IN sXFRH_Status	VARCHAR(4),
IN sXFRH_XfrType	VARCHAR(4),
IN sBy                varchar(10),
IN sRecStatus         varchar(4),

IN sControlDateTime           varchar(20),
OUT Result varchar(30),
OUT Message varchar(30),
OUT retXFRH_StockXfrHdrIdx INTEGER,
OUT retXFRD_StockXfrDtlIdx INTEGER

)
BEGIN

        DECLARE dt VARCHAR(20);
        DECLARE _statement VARCHAR(8000);


        DECLARE code CHAR(5) DEFAULT '00000';


  -- Declare exception handler for failed insert
        DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
        BEGIN
                GET DIAGNOSTICS CONDITION 1
                code = RETURNED_SQLSTATE;


        END;


        IF sControlDateTime = '' THEN
                 SELECT  now() INTO dt;

        ELSE
               SELECT  sControlDateTime INTO dt;
        END IF;





        IF sMethod = 'UPD_DISPATCHED_QTY' THEN
              -- UPDATE  stkt_stocktransferdetail set xfrd_dispatchedqty = sXFRD_DispatchedQty
              UPDATE  stkt_stocktransferdetail set xfrd_dispatchedqty = xfrd_dispatchedqty + sXFRD_DispatchedQty
              where  xfrd_stockxfrdtlidx =  sStockXfrDtlIdx;

              SELECT '00000' INTO Result;
                  SELECT  'Success Updated' INTO Message;

                  set retXFRH_StockXfrHdrIdx = sStockXfrHdrIdx;
                  set retXFRD_StockXfrDtlIdx = sStockXfrDtlIdx;

        END IF;

        IF sMethod = 'ADD_XFERHEADER' THEN
           INSERT INTO stkt_stocktransferheader (


                xfrh_company,
                xfrh_docno,
                xfrh_docdate,
                xfrh_remark,
                xfrh_status,
                xfrh_xfrtype,
                createdby,
                createddt,
                recstatus)
           VALUES
           (
                sXFRH_Company,
                sXFRH_DocNo,
                NOW(),
                sXFRH_Remark,
                sXFRH_Status,
                sXFRH_XfrType,
                sBy,
                -- NOW(),
                dt,
                sRecStatus);


                  SELECT '00000' INTO Result;
                  SELECT  'Success Inserted' INTO Message;

                  SELECT LAST_INSERT_ID() INTO retXFRH_StockXfrHdrIdx;
                  SELECT 0 INTO retXFRD_StockXfrDtlIdx;



        END IF;

        IF sMethod = 'ADD_XFERDETAIL' THEN









           INSERT INTO stkt_stocktransferdetail (



                xfrd_stockxfrhdridx,

                xfrd_lineno,
                xfrd_stockcode,
                xfrd_uomcode,
                xfrd_uomidx,
                xfrd_qty,
                xfrd_issuelocation,
                xfrd_recievelocation,
                xfrd_status,
                xfrd_remarks,
                xfrd_unitcost,
                xfrd_discamt,
                xfrd_subtotalamt,
                xfrd_discpercent,
                xfrd_discoption,
                xfrd_expirydate,
                xfrd_batchno,
                xfrd_pono,
                xfrd_poqty ,
                xfrd_bonusqty,
                xfrd_pobonusqty,
                xfrd_polineno,
                xfrd_poidx,
                xfrd_convuomidx,
                xfrd_convqty,
                xfrd_convunitcost,
                xfrd_convuomcode,
                xfrd_unitprice,
                xfrd_gstpurcode,
                xfrd_gsttaxrates,
                xfrd_gstamt,
                xfrd_grosstotal,
                xfrd_dispatchedqty,

                createdby,
                createddt,
                recstatus)
           VALUES
           (

                sStockXfrHdrIdx,
                
                sXFRD_LineNo,
                sXFRD_StockCode,
                sXFRD_UOMCode,
                sXFRD_UOMIdx,
                sXFRD_Qty,
                sXFRD_IssueLocation,
                sXFRD_RecieveLocation,
                sXFRD_Status,
                sXFRD_Remarks,
                sXFRD_UnitCost,
                sXFRD_DiscAmt,
                sXFRD_SubTotalAmt,
                sXFRD_DiscPercent,
                sXFRD_DiscOption,

                        sXFRD_ExpiryDate,
                 

                sXFRD_BatchNo,
                sXFRD_PONo,
                sXFRD_POQty ,
                sXFRD_BonusQty,
                sXFRD_POBonusQty,
                sXFRD_POLineNo,
                sXFRD_POIdx,
                sXFRD_ConvUOMIdx,
                sXFRD_ConvQty,
                sXFRD_ConvUnitCost,
                sXFRD_ConvUOMCode,
                sXFRD_UnitPrice,
                sXFRD_GSTPurcode,
                sXFRD_GSTTaxRates,
                sXFRD_GSTAmt,
                sXFRD_GrossTotal,
                sXFRD_DispatchedQty,
                
                sBy,
                -- NOW(),
                dt,
                sRecStatus);


                  SELECT '00000' INTO Result;
                  SELECT  'Success Inserted' INTO Message;

                  SELECT LAST_INSERT_ID() INTO retXFRD_StockXfrDtlIdx;
                  SET retXFRH_StockXfrHdrIdx = sStockXfrHdrIdx;



     END IF;

              -- Check whether the insert was successful
     IF code <> '00000' THEN


                SELECT code INTO Result;
                SELECT  'Failed to update' INTO Message;

                select 0 into retXFRH_StockXfrHdrIdx;
                select 0 into retXFRD_StockXfrDtlIdx;


        END IF;





END