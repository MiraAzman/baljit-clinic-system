package BusinessLogic;

import BusinessData.DAL_Stock;
import BusinessData.DAL_Company;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 *
 * @author N3355
 */
@WebServlet(name = "Servlet_Company", urlPatterns = {"/Servlet_Company"})
public class Servlet_Company extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Servlet Servlet_Company</title>");            
            out.println("</head>");
            out.println("<body>");
            out.println("<h1>Servlet Servlet_Company at " + request.getContextPath() + "</h1>");
            out.println("</body>");
            out.println("</html>");
        }
    }
    
     public void Bind_COMP_List(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
         
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();

        String sCompCode = "";
        String sCompName = "";
        String sState = "";
        
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();

        //Get page and rows value from JSP page
        int page = Integer.parseInt(request.getParameter("page"));
        int rows = Integer.parseInt(request.getParameter("rows"));
        sCompCode = request.getParameter("COMPCODE");
        sCompName = request.getParameter("COMPNAME");
        sState = request.getParameter("COMPSTATE");
       

        String sortName = request.getParameter("sidx");
        String sortOrder = request.getParameter("sord");
        String sOrder = "";
        if (sortName != null) {
            sOrder = sortName + " " + sortOrder;
        }

        //Calculate offset value
        //int offset = (page - 1) * rows;
        DAL_Company objComp = new DAL_Company();

        int total = 0;
        double pageval = 0;

        BLL_Common.Common_Object rsComp = objComp.DAL_GET_COMPLIST(SiteName, new String[]{
            "GET_COMP_LIST", sCompCode, sCompName, sState, "","", sOrder, Integer.toString(page), Integer.toString(rows)});

        BLL_Common.Common_Object rsCompRow = objComp.DAL_GET_COMPLIST(SiteName, new String[]{
            "COUNT_COMP_LIST", sCompCode, sCompName, sState, "","", "", "", ""});

        //Execute all queries here
        try {

            total = rsCompRow.getJSONArray(0).getJSONObject(0).getInt("Total");

            if (total > 0) {
                pageval = (double) total / rows;
            } else {
                pageval = 0;
            }

            //put total no records in json object with total key           
            json.put("total", (int) (Math.ceil(pageval)));
            json.put("page", page);
            json.put("records", total);

            json.put("rows", rsComp.getJSONArray(0));

            //} catch (SQLException e1) {
        } catch (NullPointerException e1) {
            e1.printStackTrace();
        } finally {

        }

        //return json data to JSP page
        out.print(json);
        out.flush();
        out.close();
    }
     
     
     public void COMP_SUPPLIER_STOCK(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        
        HttpSession session = request.getSession(); 
        String SiteName = (String) session.getAttribute("SiteName");
         
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();

        String sCompCode = "";
        String sStkCode = "";
        String sSuppCode = "";
        
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();

        //Get page and rows value from JSP page
       // int page = Integer.parseInt(request.getParameter("page"));
       // int rows = Integer.parseInt(request.getParameter("rows"));
        sCompCode = request.getParameter("COMPCODE");
        sStkCode = request.getParameter("STKCODE");
        sSuppCode = request.getParameter("SUPPCODE");
      //  sState = request.getParameter("COMPSTATE");
       
        //String sortName = request.getParameter("sidx");
        //String sortOrder = request.getParameter("sord");
        
        //Calculate offset value
        //int offset = (page - 1) * rows;
        DAL_Company objComp = new DAL_Company();           

        BLL_Common.Common_Object rsCompStkItem = objComp.DAL_GET_COMPLIST(SiteName, new String[]{
            "COMP_SUPP_STK", sCompCode, "", "", sSuppCode, sStkCode, "", "", ""});

        //Execute all queries here
        try {
                  
            json.put("rows", rsCompStkItem.getJSONArray(0));

            //} catch (SQLException e1) {
        } catch (NullPointerException e1) {
            e1.printStackTrace();
        } finally {

        }

        //return json data to JSP page
        out.print(json);
        out.flush();
        out.close();
    }
     
     
    public void GET_TOTAL_COMPANY(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        PrintWriter out = response.getWriter();
        response.setContentType("text/json");
        //JSON object
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();

        try {
            String sCompCode = request.getParameter("COMPCODE");
            
            DAL_Company sCompRec = new DAL_Company();
            BLL_Common.Common_Object rsTotalCompany = sCompRec.DAL_GET_COMPLIST(SiteName, new String[]{
                "COUNT_PO_COMP_LIST", "", "", "", "", "", "","",""});
            
            json.put("rows", rsTotalCompany.getJSONArray(0));
            out.print(rsTotalCompany.getJSONArrayAsJSONObject("object"));

        } catch (Exception e) {
            out.println("Exception Error.");
            e.printStackTrace();
        } finally {
            // BLL_Common.closeResultSet(rs,"");
        }
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
       // processRequest(request, response);
        
        String p_method = null;
        p_method = request.getParameter("SFC");

        if (p_method.equals("GET_TOTAL_COMP")) {
            try {
                GET_TOTAL_COMPANY(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else if (p_method.equals("GET_COMP_SUPP_STK")) {
            try {
                COMP_SUPPLIER_STOCK(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            } 
        
        }
        
        
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
       // processRequest(request, response);
        
         String p_method = null;
         p_method = request.getParameter("SFC");
        
        if (p_method.equals("GET_COMP_LIST")) {
            try {
                Bind_COMP_List(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
       
        
        
        
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
