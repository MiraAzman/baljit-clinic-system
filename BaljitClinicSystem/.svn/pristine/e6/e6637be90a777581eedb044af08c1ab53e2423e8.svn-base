package BusinessLogic;

import BusinessData.DAL_ApplicationSetting;
import BusinessData.DAL_GST;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import net.sf.json.JSONObject;

/**
 *
 * @author N3359
 */
@WebServlet(name = "Servlet_ApplicationSetting", urlPatterns = {"/Servlet_ApplicationSetting"})
public class Servlet_ApplicationSetting extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Servlet Servlet_ApplicationSetting</title>");            
            out.println("</head>");
            out.println("<body>");
            out.println("<h1>Servlet Servlet_ApplicationSetting at " + request.getContextPath() + "</h1>");
            out.println("</body>");
            out.println("</html>");
        }
    }

    public static void isReachable(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException
    {
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();

        DAL_ApplicationSetting objAppSett = new DAL_ApplicationSetting();
        String LocationCode = request.getParameter("LOCATION");
        String[] sLocationCode = {"GET_LOC_URL",LocationCode,"","","","",""};
        BLL_Common.Common_Object
        rsLoc = objAppSett.DAL_GET_LOCATION(SiteName, sLocationCode);
 
        String sURL="";
        String sID="";
        String sPW="";
        String sLoc = "";

        if (rsLoc.getJSONArray(0).size() > 0){

            for(int row=0; row < rsLoc.getJSONArray(0).size(); row++)
            {
                sURL = rsLoc.getJSONArray(0).getJSONObject(row).getString("wsc_url");
                sID = rsLoc.getJSONArray(0).getJSONObject(row).getString("wsc_userid");                        
                sPW = rsLoc.getJSONArray(0).getJSONObject(row).getString("wsc_password");
                sLoc = rsLoc.getJSONArray(0).getJSONObject(row).getString("wsc_locationcode");
            }   
        }        

//        boolean bStatus = BLL_Common.TestConnection(sURL, 10000);
        
        //boolean bStatus = BLL_Common.isReachable(sURL);
        try
        {
            boolean bStatus = BLL_Common.AA.isReachable2(sURL);
            if (bStatus)
            {
                out.print("Y");
            }
            else
            {
                out.print("N");
            }
        }
        catch (Exception e)
        {
            out.print("N");
        }
        
        out.flush();
        out.close(); 
    }
    
    public void Bind_Application_Setting(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException, SQLException{
        PrintWriter out = response.getWriter();
        response.setContentType("text/json");
        //JSON object
        JSONObject json = new JSONObject();

        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        try {
            
            DAL_ApplicationSetting AppSetting = new DAL_ApplicationSetting();
            BLL_Common.Common_Object rsAppSettings = AppSetting.DAL_GET_APPLICATION_SETTINGS(SiteName, new String[]{""});
            json.put("rows", rsAppSettings.getJSONArray(0));
            out.print(rsAppSettings.getJSONArrayAsJSONObject("object"));
           
             if (rsAppSettings.getJSONArray(0).size() > 0){
                 
                  for(int row=0; row < rsAppSettings.getJSONArray(0).size(); row++)
                    {
                        String sKey = rsAppSettings.getJSONArray(0).getJSONObject(row).getString("AppKey");
                        String sValue = rsAppSettings.getJSONArray(0).getJSONObject(row).getString("AppValue");                        
                        session.setAttribute(sKey, sValue);                                    
                    }   
                 
             }        
 
        } catch (Exception e) {
            out.println("Exception Error.");
            e.printStackTrace();
        } finally {
           // BLL_Common.closeResultSet(rs,"");
        }
    }
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String p_method = null;
        p_method = request.getParameter("SFC");
        
        if (p_method.equals("GET_APPSETTINGS")) {
            try {
                Bind_Application_Setting(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
        if (p_method.equals("GET_LOCATION_URL_STATUS")) {
            try {
                isReachable(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
    }
    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
      
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
