package BusinessLogic;

import BusinessData.BaseDAL;
import BusinessData.DAL_PopulateData;
import BusinessData.DAL_ChargePackage;
import static BusinessLogic.Servlet_GRN.DataTransfer_GRN;
import static BusinessLogic.Servlet_StockAdjustment.Adj_Items;
import static BusinessLogic.Servlet_StockAdjustment.UpdateStockBalance;
import static BusinessLogic.Servlet_StockAdjustment.UpdateStockCostQty;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JSONSerializer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
/**
 *
 * @author N0535
 */
@WebServlet(name = "Servlet_ChargePackage", urlPatterns = {"/Servlet_ChargePackage"})
public class Servlet_ChargePackage extends HttpServlet {
    
    public void Bind_Package_List(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException 
    {
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        
        JSONObject json = new JSONObject();
        String sPackageCode = "";
        String sPackageChgGrp = "";
        String sStatus = "";
        String sPackageName = "";
        
        int page = Integer.parseInt(request.getParameter("page"));
        int rows = Integer.parseInt(request.getParameter("rows"));
        sPackageCode = request.getParameter("PACKCODE");
        sPackageChgGrp = request.getParameter("PACKCHGGRP");
        sStatus = request.getParameter("STATUS");
        sPackageName = request.getParameter("PACKNAME");
        
        String sortName = request.getParameter("sidx");
        String sortOrder = request.getParameter("sord");
        String sOrder = "";
        if (sortName != null) {
            sOrder = sortName + " " + sortOrder;
        }
        
        DAL_ChargePackage DAL_ChargePackage = new DAL_ChargePackage();
        
        int total = 0;
        double pageval = 0;

        BLL_Common.Common_Object PackageList = DAL_ChargePackage.DAL_GET_PACKAGELIST(SiteName, new String[]{
            "GET_PACKAGE_LIST", sPackageCode, sPackageName, sPackageChgGrp, sStatus, sOrder, Integer.toString(page), Integer.toString(rows)});

        BLL_Common.Common_Object PackageTotalRow = DAL_ChargePackage.DAL_GET_PACKAGELIST(SiteName, new String[]{
            "COUNT_PACKAGE_LIST", sPackageCode, sPackageName, sPackageChgGrp, sStatus, "", "", ""});

        //Execute all queries here
        try {

            total = PackageTotalRow.getJSONArray(0).getJSONObject(0).getInt("Total");

            if (total > 0) {
                pageval = (double) total / rows;
            } else {
                pageval = 0;
            }

            //put total no records in json object with total key           
            json.put("total", (int) (Math.ceil(pageval)));
            json.put("page", page);
            json.put("records", total);

            json.put("rows", PackageList.getJSONArray(0));

            //} catch (SQLException e1) {
        } catch (NullPointerException e1) {
            e1.printStackTrace();
        } finally {

        }

        //return json data to JSP page
        out.print(json);
        out.flush();
        out.close();
    }
    
    protected void INSERT_PACKAGE(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();
        
        String sMessage = "";
        JSONArray jsonPackage = JSONArray.fromObject(request.getParameter("ADDPACK"));
        String sMode = request.getParameter("MODE");
        DAL_ChargePackage DAL_ChargePackage = new DAL_ChargePackage();
        String[] aryPackage = {
            sMode /*sMethod                     VARCHAR(30)*/,
            "" /*1-spkh_pkhcode		  	varchar(10)*/,
            "" /*2-spkh_pkhname 	  	varchar(100)*/,
            "0"/*3-spkh_pkhprice 	  	decimal(15,3)*/, 
            "0"/*4-spkh_pkhcost 		decimal(15,3)*/, 
            "" /*5-spkh_pkhisactive             varchar(1)*/, 
            "" /*6-spkreportgroup 		varchar(6)*/, 
            "0"/*7-spkh_pkhprice2 		decimal(15,3)*/, 
            "0"/*8-spkh_pkhprice3 		decimal(15,3)*/, 
            "0"/*9-spkh_pkhprice4 		decimal(15,3)*/, 
            "" /*10-spkh_pkhcgrp 		varchar(6)*/, 
            "" /*11-spkh_pkhisimmpack           varchar(1)*/, 
            "N"/*12-spkh_pkhiscourse            varchar(1)*/, 
            "0"/*13-spkh_pkhcoursetimes 	int(11)*/, 
            "" /*14-spkh_pkhgstsupptaxcode 	varchar(8)*/,            
            "" /*15-spkditemcode                varchar(30)*/,
            "" /*16-spkdremark                  varchar(256)*/,
            "" /*17-spkditemcategory            varchar(6)*/,
            "" /*18-spkditemgroup               varchar(10)*/,
            "0" /*19-spkditemprice              decimal(15,3)*/,
            "0" /*20-spkdpriceratio             decimal(15,6)*/,
            (String)session.getAttribute("loginid") /*21-sBy                     varchar(10)*/,
            "1" /*22-srecstatus              varchar(4)*/};
        
        int length = jsonPackage.size();
        for (int i = 0; i < length; i++) {
            JSONObject jsonObject = jsonPackage.getJSONObject(i);
            String tempValue = jsonObject.getString("value");

            if (jsonObject.getString("name").equals("txtPackCode")) {
                aryPackage[1] = tempValue.toUpperCase();
            } else if (jsonObject.getString("name").equals("txtPackDesc")) {
                aryPackage[2] = tempValue;
            }else if (jsonObject.getString("name").equals("ddlStatus")) {
                aryPackage[5] = tempValue.toUpperCase();
            }else if (jsonObject.getString("name").equals("ddlCGRP")) {
                aryPackage[10] = tempValue.toUpperCase();
            }else if (jsonObject.getString("name").equals("ddlACCGRP")) {
                aryPackage[6] = tempValue.toUpperCase();
            } else if (jsonObject.getString("name").equals("ddlImPack")) {
                aryPackage[11] = tempValue.toUpperCase();
            } else if (jsonObject.getString("name").equals("chkCourse")) {
                if(tempValue.toUpperCase().equals("Y")){
                aryPackage[12] = tempValue.toUpperCase();}
            }else if (jsonObject.getString("name").equals("txtCourse")) {
                aryPackage[13] = tempValue.toUpperCase();
            } else if (jsonObject.getString("name").equals("ddlGSTCodeSup")) {
                aryPackage[14] = tempValue.toUpperCase();
            }          
        }
        
        BLL_Common.Common_Object obj = DAL_ChargePackage.DAL_ADDEDIT_PACKAGE(SiteName, aryPackage);
        boolean bReturn = false;

        try {
            if (obj.getObjectArray(0).toString().equals("00000")) {
                obj.commit();
                DataTransfer_Package(aryPackage[1], SiteName); 
                bReturn = true;
                sMessage = obj.getObjectArray(1).toString();
            } else {
                obj.rollback();
            }
        } catch (Exception e) {
            try {
                obj.rollback();
            } catch (SQLException ex) {
                bReturn = false;
            }
        }

        json.put("bool", bReturn);
        json.put("msg", sMessage);

        out.println(json);
    }

    // by Amira - 28/07/2016
    public void Get_Package_Header(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {        
        
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        PrintWriter out = response.getWriter();
        response.setContentType("text/json");
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();

        try {            
            String sCode = request.getParameter("PACKCODE");

            DAL_ChargePackage CHGItemDetail = new DAL_ChargePackage();
            BLL_Common.Common_Object rsDetail = CHGItemDetail.DAL_GET_PACKAGELIST(SiteName, new String[]{
                "GET_PACKAGE_HEADER", sCode, "", "", "", "", "", ""});
            json.put("row", rsDetail.getJSONArray(0));
            out.print(rsDetail.getJSONArrayAsJSONObject("object"));                
        } catch (Exception e) {
            out.println("Exception Error.");
            e.printStackTrace();
        } 
    }  
    
    // by Amira - 03/08/2016
    public void Get_Package_Detail(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {        
        
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        PrintWriter out = response.getWriter();
        response.setContentType("text/json");
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();

        try {            
            String sCode = request.getParameter("PACKCODE");

            DAL_ChargePackage CHGItemDetail = new DAL_ChargePackage();
            BLL_Common.Common_Object rsDetail = CHGItemDetail.DAL_GET_PACKAGELIST(SiteName, new String[]{
                "GET_PACKAGE_DETAIL", sCode, "", "", "", "", "", ""});
            json.put("row", rsDetail.getJSONArray(0));
            out.print(rsDetail.getJSONArrayAsJSONObject("object"));                
        } catch (Exception e) {
            out.println("Exception Error.");
            e.printStackTrace();
        } 
    } 
    
    // by Amira - 04/08/2016
    public void UPDATE_PACKAGE(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();

        boolean bReturn = false;
        
        String sCode = request.getParameter("CODE");
        String sName = request.getParameter("NAME");   
        String sPrice = request.getParameter("PRICE");    
        String sPrice2 = request.getParameter("PRICE2");    
        String sPrice3 = request.getParameter("PRICE3");    
        String sPrice4 = request.getParameter("PRICE4"); 
        String sIsActive = request.getParameter("ISACTIVE");  
        String sCGRP = request.getParameter("CGRP");  
        String sIsImmPack = request.getParameter("ISIMMPACK");  
        String sIsCourse = request.getParameter("ISCOURSE");  
        String sCourseTimes = request.getParameter("COURSETIMES");  
        String sGSTCode = request.getParameter("GSTCODE");
        String JsonPackage = request.getParameter("ITEMS");
        String sACCGRP = request.getParameter("ACCGRP");  
        JSONArray PackageItem_array = (JSONArray) JSONSerializer.toJSON(JsonPackage);
         
        //get total price for all package detail item (to calculate price ratio)
        double totalItemPrice = 0;
        for (Object js : PackageItem_array) { //iterate through JsonPackage
            
            JSONObject PackageItemjson = (JSONObject) js; 
            double curItemPrice = Double.parseDouble(PackageItemjson.get("ITEMPRICE").toString());
            totalItemPrice = totalItemPrice + curItemPrice;
        }
        
        String[] aryHdr = {
            "UPDATE_PACKAGEHEADER", // sMethod varchar(30)
            sCode,          // spkh_pkhcode varchar(10)
            sName,          // spkh_pkhname varchar(100)
            sPrice,         // spkh_pkhprice decimal(15,3)
            "0",            // spkh_pkhcost decimal(15,3)
            sIsActive,      // spkh_pkhisactive varchar(1)
            "",             // spkreportgroup varchar(6)
            sPrice2,        // spkh_pkhprice2 decimal(15,3)
            sPrice3,        // spkh_pkhprice3 decimal(15,3)
            sPrice4,        // spkh_pkhprice4 decimal(15,3)
            sCGRP,          // spkh_pkhcgrp varchar(6)
            sIsImmPack,     // spkh_pkhisimmpack varchar(1)
            sIsCourse,      // spkh_pkhiscourse varchar(1)
            sCourseTimes,   // spkh_pkhcoursetimes int(11)
            sGSTCode,       // spkh_pkhgstsupptaxcode varchar(8)
            "",         // spkditemcode varchar(30)
            "",         // spkdremark varchar(256)
            "",         // spkditemcategory varchar(6)
            "",         // spkditemgroup varchar(10)
            "0",        // spkditemprice decimal(15,3)
            "0",        // spkdpriceratio decimal(15,6)
            (String)session.getAttribute("loginid"), // sBy varchar(10)
            "1"         // srecstatus varchar(4)
        };          
        DAL_ChargePackage objPackage = new DAL_ChargePackage();
        BLL_Common.Common_Object objHdr = objPackage.DAL_ADDEDIT_PACKAGE(SiteName, aryHdr); 
                 
        try {
            if (objHdr.getObjectArray(0).toString().equals("00000")) {                 
                objHdr.commit();
                //DataTransfer_PackageHeader(sCode);
                
                //UPDATE & INSERT RECORD
                for (Object js : PackageItem_array) { //iterate through JsonPackage
                        
                    JSONObject PackageItemjson = (JSONObject) js; 

                    String sMethod = "";
                    String sFunc = PackageItemjson.get("FUNCTION").toString();
                    if (sFunc.equals("INSERT"))
                        sMethod = "ADD_PACKAGE_DETAIL";
                    else if (sFunc.equals("UPDATE"))
                        sMethod = "UPDATE_PACKAGE_DETAIL";
                    
                    double dItemPrice = Double.parseDouble(PackageItemjson.get("ITEMPRICE").toString());
                    String sPriceRatio = Double.valueOf(dItemPrice/totalItemPrice).toString();

                    String[] aryDtl = {
                        sMethod,// sMethod varchar(30)
                        sCode,  // spkh_pkhcode varchar(10)
                        "",     // spkh_pkhname varchar(100)
                        "0",    // spkh_pkhprice decimal(15,3)
                        "0",    // spkh_pkhcost decimal(15,3)
                        "",     // spkh_pkhisactive varchar(1)
                        "",     // spkreportgroup varchar(6)
                        "0",    // spkh_pkhprice2 decimal(15,3)
                        "0",    // spkh_pkhprice3 decimal(15,3)
                        "0",    // spkh_pkhprice4 decimal(15,3)
                        "",     // spkh_pkhcgrp varchar(6)
                        "",     // spkh_pkhisimmpack varchar(1)
                        "",     // spkh_pkhiscourse varchar(1)
                        "0",    // spkh_pkhcoursetimes int(11)
                        "",     // spkh_pkhgstsupptaxcode varchar(8)
                        PackageItemjson.get("ITEMCODE").toString(),     // spkditemcode varchar(30)
                        PackageItemjson.get("REMARK").toString(),       // spkdremark varchar(256)
                        PackageItemjson.get("ITEMCATEGORY").toString(), // spkditemcategory varchar(6)
                        PackageItemjson.get("ITEMGROUP").toString(),    // spkditemgroup varchar(10)
                        PackageItemjson.get("ITEMPRICE").toString(),    // spkditemprice decimal(15,3)
                        sPriceRatio,                                    // spkdpriceratio decimal(15,6)
                        (String)session.getAttribute("loginid"),        // sBy varchar(10)
                        "1"                                             // srecstatus varchar(4)
                    };
                    BLL_Common.Common_Object objDtl = objPackage.DAL_ADDEDIT_PACKAGE(SiteName, aryDtl);
                    if (objDtl.getObjectArray(0).toString().equals("00000")) {
                        objDtl.commit();
                        
                        bReturn = true;  
                    } else {
                        objDtl.rollback();
                        bReturn = false;
                    }                                                
                }
                
                //SET recstatus = 0 BEFORE DELETE RECORD (FOR DATA TRANSFER PURPOSE)               
                BLL_Common.Common_Object objPackageDtl = objPackage.DAL_GET_PACKAGELIST(SiteName, new String[]{
                "GET_PACKAGE_DETAIL", sCode, "", "", "", "", "", ""});
                JSONArray PackageDtl_array = objPackageDtl.getJSONArray(0);   

                for (Object jsPackageDtl : PackageDtl_array) { //iterate every record from get package details 

                    JSONObject PackageDtljson = (JSONObject) jsPackageDtl;
                    
                    boolean bFound = false;
                    String curItemCode = PackageDtljson.get("pkditemcode").toString();  
                    //double dActualQty = Double.parseDouble(PackageDtljson.get("ACTUALQTY").toString());   

                    for (Object js : PackageItem_array) { //iterate through JsonPackage
                        
                        JSONObject PackageItemjson = (JSONObject) js; 
                        String sItemCode = PackageItemjson.get("ITEMCODE").toString();  
                        
                        if (curItemCode.equals(sItemCode)) { //test for matching item code
                            bFound = true;                           
                            break;
                        }                                                  
                    }
                    if (!(bFound)) {
                        
                        String[] aryDtl = {
                            "UPDATE_PACKAGE_DETAIL",// sMethod varchar(30)
                            sCode,  // spkh_pkhcode varchar(10)
                            "",     // spkh_pkhname varchar(100)
                            "0",    // spkh_pkhprice decimal(15,3)
                            "0",    // spkh_pkhcost decimal(15,3)
                            "",     // spkh_pkhisactive varchar(1)
                            "",     // spkreportgroup varchar(6)
                            "0",    // spkh_pkhprice2 decimal(15,3)
                            "0",    // spkh_pkhprice3 decimal(15,3)
                            "0",    // spkh_pkhprice4 decimal(15,3)
                            "",     // spkh_pkhcgrp varchar(6)
                            "",     // spkh_pkhisimmpack varchar(1)
                            "",     // spkh_pkhiscourse varchar(1)
                            "0",    // spkh_pkhcoursetimes int(11)
                            "",     // spkh_pkhgstsupptaxcode varchar(8)
                            curItemCode,     // spkditemcode varchar(30)
                            "",              // spkdremark varchar(256)
                            "",              // spkditemcategory varchar(6)
                            "",              // spkditemgroup varchar(10)
                            "0",             // spkditemprice decimal(15,3)
                            "0",             // spkdpriceratio decimal(15,6)
                            "",              // sBy varchar(10)
                            "0"               // srecstatus varchar(4)
                        };
                        BLL_Common.Common_Object objDtl = objPackage.DAL_ADDEDIT_PACKAGE(SiteName, aryDtl);
                        if (objDtl.getObjectArray(0).toString().equals("00000")) {
                            objDtl.commit();

                            bReturn = true;  
                        } else {
                            objDtl.rollback();
                            bReturn = false; 
                        }
                    }
                }                
                DataTransfer_Package(sCode, SiteName); 
                
                //DELETE RECORD               
                objPackageDtl = objPackage.DAL_GET_PACKAGELIST(SiteName, new String[]{
                "GET_PACKAGE_DETAIL", sCode, "", "", "", "", "", ""});
                PackageDtl_array = objPackageDtl.getJSONArray(0);   

                for (Object jsPackageDtl : PackageDtl_array) { //iterate every record from get package details 

                    JSONObject PackageDtljson = (JSONObject) jsPackageDtl;
                    
                    boolean bFound = false;
                    String curItemCode = PackageDtljson.get("pkditemcode").toString();  

                    for (Object js : PackageItem_array) { //iterate through JsonPackage
                        
                        JSONObject PackageItemjson = (JSONObject) js; 
                        String sItemCode = PackageItemjson.get("ITEMCODE").toString();  
                        
                        if (curItemCode.equals(sItemCode)) { //test for matching item code
                            bFound = true;                           
                            break;
                        }                                                  
                    }
                    if (!(bFound)) {
                        
                        String[] aryDtl = {
                            "DELETE_PACKAGE_DETAIL",// sMethod varchar(30)
                            sCode,  // spkh_pkhcode varchar(10)
                            "",     // spkh_pkhname varchar(100)
                            "0",    // spkh_pkhprice decimal(15,3)
                            "0",    // spkh_pkhcost decimal(15,3)
                            "",     // spkh_pkhisactive varchar(1)
                            "",     // spkreportgroup varchar(6)
                            "0",    // spkh_pkhprice2 decimal(15,3)
                            "0",    // spkh_pkhprice3 decimal(15,3)
                            "0",    // spkh_pkhprice4 decimal(15,3)
                            "",     // spkh_pkhcgrp varchar(6)
                            "",     // spkh_pkhisimmpack varchar(1)
                            "",     // spkh_pkhiscourse varchar(1)
                            "0",    // spkh_pkhcoursetimes int(11)
                            "",     // spkh_pkhgstsupptaxcode varchar(8)
                            curItemCode,     // spkditemcode varchar(30)
                            "",              // spkdremark varchar(256)
                            "",              // spkditemcategory varchar(6)
                            "",              // spkditemgroup varchar(10)
                            "0",             // spkditemprice decimal(15,3)
                            "0",             // spkdpriceratio decimal(15,6)
                            "",              // sBy varchar(10)
                            ""               // srecstatus varchar(4)
                        };
                        BLL_Common.Common_Object objDtl = objPackage.DAL_ADDEDIT_PACKAGE(SiteName, aryDtl);
                        if (objDtl.getObjectArray(0).toString().equals("00000")) {
                            objDtl.commit();

                            bReturn = true;  
                        } else {
                            objDtl.rollback();
                            bReturn = false; 
                        }
                    }
                }              
            } else {
                objHdr.rollback();
            }
        } catch (Exception e) {
            try {
                objHdr.rollback();
            } catch (SQLException ex) {
                bReturn = false;
            }
        }        
        json.put("bool", bReturn);
        out.println(json);
    }
    public static String DataTransfer_Package(String sCode, String SiteName){
        return DataTransfer_Package(sCode,SiteName,"","");
    }
    public static String DataTransfer_Package(String sCode, String SiteName,String CompanyCode, String LocationCode){
    //public static String DataTransfer_Package(String sCode, String SiteName){
        //BLL_ChargePackage sm = new BLL_ChargePackage();
        int AllowableThreadCount = 50;
        DAL_ChargePackage objCHGPackage = new DAL_ChargePackage();
        JSONObject obj_add = new JSONObject();
        JSONObject obj_pass = new JSONObject();
        String sMessage = "";
        
        try{
            String[] aryCHGPackageHdr = {            
                "GET_DATAEX_HDR",        // sMethod varchar(30)
                sCode,          // sPackCode varchar(10)
                "",             // sPackName varchar(100)
                "",             // sPackChgGrp varchar(10)
                "",             // sPackStatus varchar(1)
                "",             // sOrderBy varchar(30)
                "",             // sPage varchar(10)
                ""              // sPerPage varchar(10)
            };
            BLL_Common.Common_Object objHdr = objCHGPackage.DAL_GET_PACKAGELIST(SiteName, aryCHGPackageHdr);
            if(objHdr.getJSONArray(0).size() > 0){
                obj_add.put("CHGPACKAGEHDR", objHdr.getJSONArray(0));               
                
                if(objHdr.getJSONArray(1).size() > 0){
                    obj_pass.put("DATA", obj_add);
                    String sURL = "";
                    String sLoc = "";
                    String sComp = "";

//                    for(Object jsonURL : objHdr.getJSONArray(1)){
//                        JSONObject jsURL = (JSONObject) jsonURL;
//
//                        sURL = jsURL.get("wsc_url").toString() + "HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
//                        sLoc = jsURL.get("wsc_url").toString();
//                        if(!sURL.equals("")){
//                            sURL = "http://localhost:8080/HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
//                            sm.DataTransfer_ChargePackage(obj_pass.toString(), sURL, sLoc);
//                        }
//                    }
                    ExecutorService executor = Executors.newFixedThreadPool(AllowableThreadCount);  
                    
                    boolean bSingleSite = false;
                    if (!CompanyCode.equals("") && !LocationCode.equals(""))
                    {bSingleSite = true;}
                    
                    boolean bSiteFound = false;
                    
                    for(Object jsonURL : objHdr.getJSONArray(1)){
                        JSONObject jsURL = (JSONObject) jsonURL;
                        
                        sLoc = jsURL.get("wsc_locationcode").toString();
                        sComp = jsURL.get("wsc_companycode").toString();
                        bSiteFound = false;
                        
                        if (bSingleSite)
                        {
                            if (sLoc.equals(LocationCode) && sComp.equals(CompanyCode))
                            {
                                bSiteFound = true;
                            }
                        }
                        else
                        {
                            bSiteFound = true; //TAKE EVERY SITE 
                        }
                        
                        if ( BaseDAL.CMSIntegrationType.equals("HIS") )
                        {
                            sURL = jsURL.get("wsc_url").toString() + "HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
                        }
                        else if ( BaseDAL.CMSIntegrationType.equals("CMS") )
                        {
                            sURL = jsURL.get("wsc_url").toString() + "CMS_WebServices_Inventory/webresources/CMS_WebServices/UpdateChargePackage";
                        }
                        else
                        {
                            sURL = jsURL.get("wsc_url").toString() + "HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
                        }

                       
//                        sLoc = jsURL.get("wsc_url").toString();
                        if (bSiteFound)
                        {
                            
                            boolean bStatus = false;
                            if (jsURL.get("wsc_url").toString().equals(""))
                            {
                                bStatus = false;
                            }
                            else
                            {
                                bStatus = BLL_Common.AA.isReachable2(jsURL.get("wsc_url").toString());
                            }
                            if (!bStatus)
                            {

                                if (!bSingleSite)
                                {
                                    /* use CHARGEPACKAGE as code, which will cover both package Header and Detail */
                                    //String[] aryMasRecSync = new String[]{"ADD","CHARGEPACKAGEHDR", sComp, sLoc, sCode,"","",""};
                                    String[] aryMasRecSync = new String[]{"ADD","CHARGEPACKAGE", sComp, sLoc, sCode,"","",""};
                                    String sStatus = Servlet_MasterRecSync.UPDATE_MASTERREC_SYNC(aryMasRecSync, SiteName);
                                }
                            }
                            else
                            {
                                if(!sURL.equals("")){
                                    //sURL = "http://localhost:8080/HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
                                    Runnable DEThread = new BLL_StockDataExchange(obj_pass.toString(), sURL, sLoc);
                                    executor.execute(DEThread);
                                    sMessage = "SITE CONTACTED";
                                }
                            }
                        }
                        
                        
                    }
                    executor.shutdown();
                }
            }else{
                sMessage = "No data transfer.";
            }
            
            String[] aryCHGPackageDtl = {            
                "GET_DATAEX_DTL",        // sMethod varchar(30)
                sCode,          // sPackCode varchar(10)
                "",             // sPackName varchar(100)
                "",             // sPackChgGrp varchar(10)
                "",             // sPackStatus varchar(1)
                "",             // sOrderBy varchar(30)
                "",             // sPage varchar(10)
                ""              // sPerPage varchar(10)
            };
            BLL_Common.Common_Object objDtl = objCHGPackage.DAL_GET_PACKAGELIST(SiteName, aryCHGPackageDtl); 
            if(objDtl.getJSONArray(0).size() > 0){
                obj_add.put("CHGPACKAGEDTL", objDtl.getJSONArray(0));               
                
                if(objDtl.getJSONArray(1).size() > 0){
                    obj_pass.put("DATA", obj_add);
                    String sURL = "";
                    String sLoc = "";
                    String sComp = "";
//                    for(Object jsonURL : objDtl.getJSONArray(1)){
//                        JSONObject jsURL = (JSONObject) jsonURL;
//
//                        sURL = jsURL.get("wsc_url").toString() + "HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
//                        sLoc = jsURL.get("wsc_url").toString();
//                        if(!sURL.equals("")){
//                            sURL = "http://localhost:8080/HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
//                            sm.DataTransfer_ChargePackage(obj_pass.toString(), sURL, sLoc);
//                        }
//                    }
                    ExecutorService executor = Executors.newFixedThreadPool(AllowableThreadCount); 
                    
                    boolean bSingleSite = false;
                    if (!CompanyCode.equals("") && !LocationCode.equals(""))
                    {bSingleSite = true;}
                    
                    boolean bSiteFound = false;
                    
                    for(Object jsonURL : objDtl.getJSONArray(1)){
                        JSONObject jsURL = (JSONObject) jsonURL;
                        
                        sLoc = jsURL.get("wsc_locationcode").toString();
                        sComp = jsURL.get("wsc_companycode").toString();
                        bSiteFound = false;
                        
                        if (bSingleSite)
                        {
                            if (sLoc.equals(LocationCode) && sComp.equals(CompanyCode))
                            {
                                bSiteFound = true;
                            }
                        }
                        else
                        {
                            bSiteFound = true; //TAKE EVERY SITE 
                        }
                        
                        if ( BaseDAL.CMSIntegrationType.equals("HIS") )
                         {
                            sURL = jsURL.get("wsc_url").toString() + "HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
                         }
                        else if ( BaseDAL.CMSIntegrationType.equals("CMS") )
                         {
                            sURL = jsURL.get("wsc_url").toString() + "CMS_WebServices_Inventory/webresources/CMS_WebServices/UpdateChargePackage";
                         }
                        else
                         {
                            sURL = jsURL.get("wsc_url").toString() + "HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
                         }

//                        sURL = jsURL.get("wsc_url").toString() + "HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
//                        sLoc = jsURL.get("wsc_url").toString();
                        
                        if (bSiteFound)
                        {
                            
                            boolean bStatus = false;
                            if (jsURL.get("wsc_url").toString().equals(""))
                            {
                                bStatus = false;
                            }
                            else
                            {
                                bStatus = BLL_Common.AA.isReachable2(jsURL.get("wsc_url").toString());
                            }
                            if (!bStatus)
                            {

                                if (!bSingleSite)
                                {
                                    /* skip this paragraph, because the MasterRecSync record has been added by the PACKAGE HDR routine 
                                    String[] aryMasRecSync = new String[]{"ADD","CHARGEPACKAGEDTL", sComp, sLoc, sCode,"","",""};
                                    String sStatus = Servlet_MasterRecSync.UPDATE_MASTERREC_SYNC(aryMasRecSync, SiteName);
                                    */                                    
                                }
                            }
                            else
                            {
                               if(!sURL.equals("")){
                                    //sURL = "http://localhost:8080/HIS_WebServices_Inventory/webresources/HIS_WebServices/UpdateChargePackage";
                                    Runnable DEThread = new BLL_StockDataExchange(obj_pass.toString(), sURL, sLoc);
                                    executor.execute(DEThread);
                                    sMessage = "SITE CONTACTED";
                                }
                            }
                        }
                        
                    }
                    executor.shutdown();
                }
            }else{
                sMessage = "No data transfer.";
            } 
        }catch (Exception e){
            sMessage = e.toString();
        }        
        return sMessage;
    }   
    
    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        //processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        //processRequest(request, response);
        String p_method = null;
        p_method = request.getParameter("SFC");

        if (p_method.equals("GET_PACKAGE_LIST")) {
            try {
                Bind_Package_List(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else if (p_method.equals("INSERT_PACKAGE")) {
            try {
                INSERT_PACKAGE(request, response);
           } catch (SQLException e) {
                e.printStackTrace();
            }
        } else if (p_method.equals("GET_PACKAGE_HEADER")) {
            try {
                Get_Package_Header(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else if (p_method.equals("GET_PACKAGE_DETAIL")) {
            try {
                Get_Package_Detail(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else if (p_method.equals("UPDATE_STOCK_PACKAGE")) {
            try {
                UPDATE_PACKAGE(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
