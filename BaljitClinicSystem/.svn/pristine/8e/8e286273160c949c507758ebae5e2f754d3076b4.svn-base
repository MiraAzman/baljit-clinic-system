package BusinessLogic;

import BusinessData.BaseDAL;
import BusinessData.DAL_Media;
import java.io.*;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.Part;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import BusinessLogic.BLL_Common;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import java.util.Locale;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.servlet.http.HttpSession;

@WebServlet(name = "Servlet_Media", urlPatterns = {"/Servlet_Media"})
@MultipartConfig
public class Servlet_Media extends HttpServlet {  
        
    //public static String stock_dir = "webapps/media/stock";
    //public static String supplier_dir = "webapps/media/supplier";
    
    public static String stock_dir = "/opt/tomcat/webapps/media/stock";
    public static String supplier_dir = "/opt/tomcat/webapps/media/supplier";
    
    public void Stock_ImageLoad(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        InputStream in = null;
        String imgName = "";
        String stkCode = request.getParameter("hidStkCode");
        
        try {            
            Part imgPart = request.getPart("file");  
            in = imgPart.getInputStream(); 
        
            //extract file name          
            String contentDisp = imgPart.getHeader("content-disposition");
            String[] items = contentDisp.split(";");
            for (String s : items) {
                if (s.trim().startsWith("filename")) {
                    imgName = s.substring(s.indexOf("=") + 2, s.length()-1);
                }
            }
            
            //request.getContextPath();             
            
            //String sStock_dir = getServletContext().getRealPath(stock_dir); 
            File fstock_dir = new File(stock_dir);
            if (!fstock_dir.exists()) {
                fstock_dir.mkdirs();
            }
            
            //request.getContextPath();           

            Date now = new Date();
            String dateNow = new SimpleDateFormat("yyMMddHHmmss", Locale.ENGLISH).format(now);
            //String sNewFileName = BaseDAL.SiteCode + "_" + dateNow + imgName;
            String sNewFileName = SiteName + "_" + dateNow + imgName;
            
//String sFilePath = getServletContext().getRealPath(stock_dir ) + "/" + sNewFileName; 
            
            Path path = Paths.get(stock_dir + "/" + sNewFileName);
            BLL_Common.write_log("Image File Path : " + path, "");
            
            Files.copy(in,path);
            
            UpdateMedia("STOCK", stkCode, sNewFileName, SiteName);
                
        } catch (IOException e) {
            e.printStackTrace();
            BLL_Common.write_log(e.toString(), "");
        } catch (ServletException e) {
            e.printStackTrace();
            BLL_Common.write_log(e.toString(), "");
        } catch (SQLException e) {
            e.printStackTrace();
            BLL_Common.write_log(e.toString(), "");
        }  catch (Exception e) {
            e.printStackTrace();
            BLL_Common.write_log(e.toString(), "");
        } 
        response.sendRedirect(request.getContextPath()+"/Admin/index.jsp#/ProductDetail/"+stkCode);
    }
    
    public void UpdateMedia(String type, String code, String fileName, String SiteName) throws ServletException, IOException, SQLException {
        
        boolean bReturn = false;       
        DAL_Media DAL_Media = new DAL_Media();
        BLL_Common.Common_Object obj = DAL_Media.DAL_UPDATE_MEDIA(SiteName, new String[]{type, code, fileName});
        
        try {
            if (obj.getObjectArray(0).toString().equals("00000")) {
                obj.commit(); 
                bReturn = true;
            } else {
                obj.rollback();
            }
        } catch (Exception e) {
            try {
                obj.rollback();
            } catch (SQLException ex) {
                bReturn = false;
            }
        }
    }
    
    public void Supplier_ImageLoad(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        InputStream in = null;
        String imgName = "";
        String supplierCode = request.getParameter("hidSupplierCode");
        
        try {            
            Part imgPart = request.getPart("file");  
            in = imgPart.getInputStream(); 
        
            //extract file name          
            String contentDisp = imgPart.getHeader("content-disposition");
            String[] items = contentDisp.split(";");
            for (String s : items) {
                if (s.trim().startsWith("filename")) {
                    imgName = s.substring(s.indexOf("=") + 2, s.length()-1);
                }
            }
            
            //request.getContextPath();   
            
            //String sSupplier_dir = getServletContext().getRealPath(supplier_dir); 
            File fsupplier_dir = new File(supplier_dir);
            if (!fsupplier_dir.exists()) {
                fsupplier_dir.mkdirs();
            }
            
            //request.getContextPath();       
            
            Date now = new Date();
            String dateNow = new SimpleDateFormat("yyMMddHHmmss", Locale.ENGLISH).format(now);
            //String sNewFileName = BaseDAL.SiteCode + "_" + dateNow + imgName;
            String sNewFileName = SiteName + "_" + dateNow + imgName;
            
            //String sFilePath = getServletContext().getRealPath(supplier_dir ) + "/" + sNewFileName; 
            Path path = Paths.get(supplier_dir + "/" + sNewFileName);
                           
            Files.copy(in,path);
            
            UpdateMedia("SUPPLIER", supplierCode, sNewFileName, SiteName);
                
        } catch (IOException e) {
            e.printStackTrace();
            BLL_Common.write_log(e.toString(), "");
        } catch (ServletException e) {
            e.printStackTrace();
            BLL_Common.write_log(e.toString(), "");
        } catch (SQLException e) {
            e.printStackTrace();
            BLL_Common.write_log(e.toString(), "");
        } 
        response.sendRedirect(request.getContextPath()+"/Admin/index.jsp#/SupplierDetail/"+supplierCode);
    }
                
    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        //processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        //processRequest(request, response);    
        String sType = request.getParameter("hidType");
        try {
            if (sType.equals("SUPPLIER")) {
                Supplier_ImageLoad(request, response);
            } else if (sType.equals("STOCK")) {
                Stock_ImageLoad(request, response);
            }
        } catch (ServletException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }                           
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}

