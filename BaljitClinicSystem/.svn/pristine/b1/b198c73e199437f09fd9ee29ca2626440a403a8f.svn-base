package BusinessLogic;

import BusinessData.BaseDAL;
import BusinessData.DAL_SystemEnvironmentSettings;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import net.sf.json.JSONObject;
import java.util.Date;
import java.text.*;

/**
 *
 * @author N3359
 */
@WebServlet(name = "Servlet_SystemEnvironmentSettings", urlPatterns = {"/Servlet_SystemEnvironmentSettings"})
public class Servlet_SystemEnvironmentSettings extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Servlet Servlet_ApplicationSetting</title>");            
            out.println("</head>");
            out.println("<body>");
            out.println("<h1>Servlet Servlet_ApplicationSetting at " + request.getContextPath() + "</h1>");
            out.println("</body>");
            out.println("</html>");
        }
    }

    public void VIEW_ENVSETTINGS(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
    
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        PrintWriter out = response.getWriter();
        response.setContentType("text/json");     
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();
        
        try {   
            
            DAL_SystemEnvironmentSettings StkDetail = new DAL_SystemEnvironmentSettings();
            BLL_Common.Common_Object rsDetail = StkDetail.DAL_GET_SYSTEM_ENV_SETTINGS(SiteName, new String[]{
                "GET_SYSTEM_ENVIRONMENT_SETTINGS"});
            
            json.put("row", rsDetail.getJSONArray(0));
            out.print(rsDetail.getJSONArrayAsJSONObject("object"));
            
        } catch (Exception e) {
            out.println("Exception Error.");
            e.printStackTrace();
        } finally {
           // BLL_Common.closeResultSet(rs,"");
        } 
        //json.put("type", sType);
        //out.println(json);
    }    
        
     public void UPDATE_ENVSETTINGS(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        HttpSession session = request.getSession();
        String SiteName = (String) session.getAttribute("SiteName");
        
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        BLL_Common.write_log("Site ID : " + session.getId(), "");
        net.sf.json.JSONObject json = new net.sf.json.JSONObject();
       
        
        String sName = request.getParameter("NAME");
        String sAdd1 = request.getParameter("ADD1");
        String sAdd2 = request.getParameter("ADD2");
        String sAdd3 = request.getParameter("ADD3");
        String sPostcode = request.getParameter("POSTCODE");
        String sTel = request.getParameter("TEL");  //10
        String sFax = request.getParameter("FAX");
        
        String sCountry = request.getParameter("COUNTRY");
        String sState = request.getParameter("STATE");
        String sRemarks = request.getParameter("REMARKS");
        String sContactPer = request.getParameter("CONTACTPER");
        String sBusRegNo = request.getParameter("BUSREGNO");
        String sBusGSTNo = request.getParameter("GSTREGNO");
        
        boolean bReturn = false;   
        String sMethod = "EDIT_SYSTEM_ENVIRONMENT_SETTINGS";
        
        DAL_SystemEnvironmentSettings StkDetail = new DAL_SystemEnvironmentSettings();       

        BLL_Common.Common_Object obj = StkDetail.DAL_UPDATE_SYSTEM_ENV_SETTINGS(SiteName, new String[]{
            sMethod, sName,sAdd1, sAdd2, sAdd3, sPostcode, sTel, sFax, sCountry, sState, 
            sRemarks, sContactPer, sBusRegNo, sBusGSTNo, (String) session.getAttribute("loginid"), "1"});  
        
        try {              
            if (obj.getObjectArray(0).toString().equals("00000")) {

                obj.commit();   

                bReturn = true;                    
            } else {
                obj.rollback();
            }
        }catch (Exception e) {
            try {
                obj.rollback();
            } catch (SQLException ex) {
                out.println("Exception Error.");
                e.printStackTrace();
                bReturn = false;
            }
        }    
        json.put("bool", bReturn);
        out.println(json);
    }

    
     public static void GetCurrentDateTime(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException
    {
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        
        Date dNow = new Date( );
        SimpleDateFormat ft = new SimpleDateFormat ("yyyy.MM.dd HH:mm:ss");
      
      
        out.print(ft.format(dNow));
        out.flush();
        out.close(); 
    }

    
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String p_method = null;
        p_method = request.getParameter("SFC");
        
//        if (p_method.equals("GET_ENVSETTINGS")) {
//            try {
//                VIEW_ENVSETTINGS(request, response);
//            } catch (SQLException e) {
//                e.printStackTrace();
//            }
//        }
//        else if (p_method.equals("UPDATE_ENVSETTINGS")) {
//            try {
//                UPDATE_ENVSETTINGS(request, response);
//            } catch (SQLException e) {
//                e.printStackTrace();
//            }
//        }
        
        if (p_method.equals("GET_CURRENTDATETIME")) {
            try {
                GetCurrentDateTime(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
      
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
//        processRequest(request, response);
        String p_method = null;
        p_method = request.getParameter("SFC");
        if (p_method.equals("GET_ENVSETTINGS")) {
            try {
                VIEW_ENVSETTINGS(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }else if (p_method.equals("UPDATE_ENVSETTINGS")) {
            try {
                UPDATE_ENVSETTINGS(request, response);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
         
        
         
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
